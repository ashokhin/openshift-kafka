name: Kafka-versions-CI

on:
  push:
    branches: 
      - "master"
  schedule:
    - cron: '50 17 * * 1'
    
jobs: 
  create_kafka_variable:
    
      name: Run Python CI helper
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.REPO_TOKEN }}
            fetch-depth: 0
            fetch-tags: true

        - name: Run CI helper
          id: python_helper
          run: |
            KAFKA_VERSIONS=$(python ./ci-helpers/find_kafka_versions.py)
            echo "kafka_versions=${KAFKA_VERSIONS}" >> $GITHUB_OUTPUT
      outputs: 
        kafka_versions: ${{ steps.python_helper.outputs.kafka_versions }}

  create_kafka_matrix_of_tags:
    
    strategy:
      max-parallel: 1
      matrix:
        kafka_version_dictionary: ${{ fromJson(needs.create_kafka_variable.outputs.kafka_versions) }}
    name: Create Kafka tag
    runs-on: ubuntu-latest
    concurrency:
      group: kafka-tags
      cancel-in-progress: false

    needs: 
      - create_kafka_variable

    steps:
      - name: Checkout repo
        id: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_TOKEN }}
          fetch-depth: 0
          fetch-tags: true
      
      - name: Find Kafka versions without Git tags
        id: git_tags
        run: |
          GIT_TAGS_ARRAY=$(python ./ci-helpers/find_git_tags.py)
          echo "git_tags_array=${GIT_TAGS_ARRAY}" >> $GITHUB_OUTPUT
      
      - name: Create Kafka tag if it not exists
        run: |
          git pull origin master
          sed -i "s+https.*\.tgz+${{ matrix.kafka_version_dictionary.download_url }}+g" Dockerfile
          git add .
          git commit -m "Add version ${{ matrix.kafka_version_dictionary.version }}"
          git push origin master
          git tag -f ${{ matrix.kafka_version_dictionary.version }} ${{ github.event.inputs.target }}
          git push origin ${{ matrix.kafka_version_dictionary.version}} --force
        if: ${{ !contains(fromJson(steps.git_tags.outputs.git_tags_array), matrix.kafka_version_dictionary.version) }}


